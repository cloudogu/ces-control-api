syntax = "proto3";
package logging;
option go_package = "github.com/cloudogu/ces-control-api/generated/logging";
import 'response.proto';
import "google/protobuf/timestamp.proto";

service DoguLogMessages {
  rpc GetForDogu(DoguLogMessageRequest) returns (stream types.ChunkedDataResponse);
  rpc QueryForDogu(DoguLogMessageQueryRequest) returns (stream DoguLogMessage);
}

message DoguLogMessageRequest {
  // dogu_name contains the name of the dogu for which log lines should be returned in the response. Must not be empty.
  string dogu_name = 1;
  // line_count provides a hint with the maximum count of log lines to be returned. The response contains the actual
  // number of lines (which can be less if the request asks for more lines than there really are).
  // A value of 0 means that all lines should be returned (use with care).
  uint32 line_count = 2;
}

message DoguLogMessageQueryRequest {
  // dogu_name contains the name of the dogu for which log lines should be returned in the response. Must not be empty.
  string dogu_name = 1;
  // start_date start datetime of the first log message to be retrieved. Optional
  optional google.protobuf.Timestamp start_date = 3;
  // end_date end datetime of the last log message to be retrieved. Optional
  optional google.protobuf.Timestamp end_date = 4;
  // filter the log for a message, for example the log level. Optional
  optional string filter = 5;
}

message DoguLogMessage {
  // timestamp contains the timestamp of the log-message
  google.protobuf.Timestamp timestamp = 1;
  // message contains the content of logged message
  string message = 2;
}