// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: support_archive.proto

package maintenance

import (
	types "github.com/cloudogu/ces-control-api/generated/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSupportArchiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Environment:
	//
	//	*CreateSupportArchiveRequest_Legacy
	//	*CreateSupportArchiveRequest_Common
	Environment isCreateSupportArchiveRequest_Environment `protobuf_oneof:"environment"`
}

func (x *CreateSupportArchiveRequest) Reset() {
	*x = CreateSupportArchiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_archive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSupportArchiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSupportArchiveRequest) ProtoMessage() {}

func (x *CreateSupportArchiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_support_archive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSupportArchiveRequest.ProtoReflect.Descriptor instead.
func (*CreateSupportArchiveRequest) Descriptor() ([]byte, []int) {
	return file_support_archive_proto_rawDescGZIP(), []int{0}
}

func (m *CreateSupportArchiveRequest) GetEnvironment() isCreateSupportArchiveRequest_Environment {
	if m != nil {
		return m.Environment
	}
	return nil
}

// Deprecated: Do not use.
func (x *CreateSupportArchiveRequest) GetLegacy() *LegacySupportArchiveRequest {
	if x, ok := x.GetEnvironment().(*CreateSupportArchiveRequest_Legacy); ok {
		return x.Legacy
	}
	return nil
}

func (x *CreateSupportArchiveRequest) GetCommon() *CommonSupportArchiveRequest {
	if x, ok := x.GetEnvironment().(*CreateSupportArchiveRequest_Common); ok {
		return x.Common
	}
	return nil
}

type isCreateSupportArchiveRequest_Environment interface {
	isCreateSupportArchiveRequest_Environment()
}

type CreateSupportArchiveRequest_Legacy struct {
	// Deprecated: Do not use.
	Legacy *LegacySupportArchiveRequest `protobuf:"bytes,1,opt,name=legacy,proto3,oneof"`
}

type CreateSupportArchiveRequest_Common struct {
	Common *CommonSupportArchiveRequest `protobuf:"bytes,2,opt,name=common,proto3,oneof"`
}

func (*CreateSupportArchiveRequest_Legacy) isCreateSupportArchiveRequest_Environment() {}

func (*CreateSupportArchiveRequest_Common) isCreateSupportArchiveRequest_Environment() {}

type CommonSupportArchiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExcludedContents *ExcludedContents `protobuf:"bytes,1,opt,name=excluded_contents,json=excludedContents,proto3" json:"excluded_contents,omitempty"`
	ContentTimeframe *ContentTimeframe `protobuf:"bytes,2,opt,name=content_timeframe,json=contentTimeframe,proto3" json:"content_timeframe,omitempty"`
}

func (x *CommonSupportArchiveRequest) Reset() {
	*x = CommonSupportArchiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_archive_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonSupportArchiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonSupportArchiveRequest) ProtoMessage() {}

func (x *CommonSupportArchiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_support_archive_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonSupportArchiveRequest.ProtoReflect.Descriptor instead.
func (*CommonSupportArchiveRequest) Descriptor() ([]byte, []int) {
	return file_support_archive_proto_rawDescGZIP(), []int{1}
}

func (x *CommonSupportArchiveRequest) GetExcludedContents() *ExcludedContents {
	if x != nil {
		return x.ExcludedContents
	}
	return nil
}

func (x *CommonSupportArchiveRequest) GetContentTimeframe() *ContentTimeframe {
	if x != nil {
		return x.ContentTimeframe
	}
	return nil
}

type ExcludedContents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemState   bool `protobuf:"varint,1,opt,name=system_state,json=systemState,proto3" json:"system_state,omitempty"`
	SensitiveData bool `protobuf:"varint,2,opt,name=sensitive_data,json=sensitiveData,proto3" json:"sensitive_data,omitempty"`
	Logs          bool `protobuf:"varint,3,opt,name=logs,proto3" json:"logs,omitempty"`
	Events        bool `protobuf:"varint,4,opt,name=events,proto3" json:"events,omitempty"`
	VolumeInfo    bool `protobuf:"varint,5,opt,name=volume_info,json=volumeInfo,proto3" json:"volume_info,omitempty"`
	SystemInfo    bool `protobuf:"varint,6,opt,name=system_info,json=systemInfo,proto3" json:"system_info,omitempty"`
}

func (x *ExcludedContents) Reset() {
	*x = ExcludedContents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_archive_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExcludedContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExcludedContents) ProtoMessage() {}

func (x *ExcludedContents) ProtoReflect() protoreflect.Message {
	mi := &file_support_archive_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExcludedContents.ProtoReflect.Descriptor instead.
func (*ExcludedContents) Descriptor() ([]byte, []int) {
	return file_support_archive_proto_rawDescGZIP(), []int{2}
}

func (x *ExcludedContents) GetSystemState() bool {
	if x != nil {
		return x.SystemState
	}
	return false
}

func (x *ExcludedContents) GetSensitiveData() bool {
	if x != nil {
		return x.SensitiveData
	}
	return false
}

func (x *ExcludedContents) GetLogs() bool {
	if x != nil {
		return x.Logs
	}
	return false
}

func (x *ExcludedContents) GetEvents() bool {
	if x != nil {
		return x.Events
	}
	return false
}

func (x *ExcludedContents) GetVolumeInfo() bool {
	if x != nil {
		return x.VolumeInfo
	}
	return false
}

func (x *ExcludedContents) GetSystemInfo() bool {
	if x != nil {
		return x.SystemInfo
	}
	return false
}

type ContentTimeframe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDateTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date_time,json=startDateTime,proto3,oneof" json:"start_date_time,omitempty"`
	EndDateTime   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date_time,json=endDateTime,proto3,oneof" json:"end_date_time,omitempty"`
}

func (x *ContentTimeframe) Reset() {
	*x = ContentTimeframe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_archive_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentTimeframe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentTimeframe) ProtoMessage() {}

func (x *ContentTimeframe) ProtoReflect() protoreflect.Message {
	mi := &file_support_archive_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentTimeframe.ProtoReflect.Descriptor instead.
func (*ContentTimeframe) Descriptor() ([]byte, []int) {
	return file_support_archive_proto_rawDescGZIP(), []int{3}
}

func (x *ContentTimeframe) GetStartDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDateTime
	}
	return nil
}

func (x *ContentTimeframe) GetEndDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDateTime
	}
	return nil
}

type LegacySupportArchiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CollectEtcd defines whether etcd keys/values should be contained in the final archive (true) or nor (false)
	CollectEtcd bool `protobuf:"varint,1,opt,name=collect_etcd,json=collectEtcd,proto3" json:"collect_etcd,omitempty"`
	// CollectOsInformation defines whether information about soft- and hardware should be contained
	// in the final archive (true) or nor (false)
	CollectOsInformation bool `protobuf:"varint,2,opt,name=collect_os_information,json=collectOsInformation,proto3" json:"collect_os_information,omitempty"`
	// CollectEnvironment defines whether the environment variables should be contained
	// in the final archive (true) or nor (false)
	CollectEnvironment bool `protobuf:"varint,3,opt,name=collect_environment,json=collectEnvironment,proto3" json:"collect_environment,omitempty"`
	// CollectDoguStatusInformation defines whether information about installed dogus should be contained
	// in the final archive (true) or nor (false)
	CollectDoguStatusInformation bool `protobuf:"varint,4,opt,name=collect_dogu_status_information,json=collectDoguStatusInformation,proto3" json:"collect_dogu_status_information,omitempty"`
	// CollectProcessInformation defines whether the Process and service status should be contained
	// in the final archive (true) or nor (false)
	CollectProcessInformation bool `protobuf:"varint,5,opt,name=collect_process_information,json=collectProcessInformation,proto3" json:"collect_process_information,omitempty"`
	// CollectVolumeInformation defines whether the volume information should be contained
	// in the final archive (true) or nor (false)
	CollectVolumeInformation bool `protobuf:"varint,6,opt,name=collect_volume_information,json=collectVolumeInformation,proto3" json:"collect_volume_information,omitempty"`
	// ExcludedEtcdKeys is a list of etcd keys which should not be included in the final archive.
	ExcludedEtcdKeys []string `protobuf:"bytes,7,rep,name=excluded_etcd_keys,json=excludedEtcdKeys,proto3" json:"excluded_etcd_keys,omitempty"`
	// FailFast defines whether the archive collection should fail at the first error (true) or not (false).
	FailFast bool `protobuf:"varint,8,opt,name=fail_fast,json=failFast,proto3" json:"fail_fast,omitempty"`
	// CollectLogsFromTheseDogus must be a list of dogus. Only the logs of these dogus are collected
	// all other dogu logs are skipped
	// protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
	CollectLogsFromTheseDogus []string `protobuf:"bytes,9,rep,name=collect_logs_from_these_dogus,json=collectLogsFromTheseDogus,proto3" json:"collect_logs_from_these_dogus,omitempty"`
	// CollectCesappLog defines whether the cesapp logfile should be collected (true) or not (false).
	CollectCesappLog bool `protobuf:"varint,10,opt,name=collect_cesapp_log,json=collectCesappLog,proto3" json:"collect_cesapp_log,omitempty"`
	// CollectCesappdLog defines whether the cesappd logfile should be collected (true) or not (false).
	CollectCesappdLog bool `protobuf:"varint,11,opt,name=collect_cesappd_log,json=collectCesappdLog,proto3" json:"collect_cesappd_log,omitempty"`
	// CollectSyslog defines whether the syslog logfile should be collected (true) or not (false).
	CollectSyslog bool `protobuf:"varint,12,opt,name=collect_syslog,json=collectSyslog,proto3" json:"collect_syslog,omitempty"`
	// CollectAptLog defines whether the apt logfiles should be collected (true) or not (false).
	CollectAptLog bool `protobuf:"varint,13,opt,name=collect_apt_log,json=collectAptLog,proto3" json:"collect_apt_log,omitempty"`
	// CollectBackupWatcherLog defines whether the backup-watcher logfile should be collected (true) or not (false).
	CollectBackupWatcherLog bool `protobuf:"varint,14,opt,name=collect_backup_watcher_log,json=collectBackupWatcherLog,proto3" json:"collect_backup_watcher_log,omitempty"`
}

func (x *LegacySupportArchiveRequest) Reset() {
	*x = LegacySupportArchiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_support_archive_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacySupportArchiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacySupportArchiveRequest) ProtoMessage() {}

func (x *LegacySupportArchiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_support_archive_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacySupportArchiveRequest.ProtoReflect.Descriptor instead.
func (*LegacySupportArchiveRequest) Descriptor() ([]byte, []int) {
	return file_support_archive_proto_rawDescGZIP(), []int{4}
}

func (x *LegacySupportArchiveRequest) GetCollectEtcd() bool {
	if x != nil {
		return x.CollectEtcd
	}
	return false
}

func (x *LegacySupportArchiveRequest) GetCollectOsInformation() bool {
	if x != nil {
		return x.CollectOsInformation
	}
	return false
}

func (x *LegacySupportArchiveRequest) GetCollectEnvironment() bool {
	if x != nil {
		return x.CollectEnvironment
	}
	return false
}

func (x *LegacySupportArchiveRequest) GetCollectDoguStatusInformation() bool {
	if x != nil {
		return x.CollectDoguStatusInformation
	}
	return false
}

func (x *LegacySupportArchiveRequest) GetCollectProcessInformation() bool {
	if x != nil {
		return x.CollectProcessInformation
	}
	return false
}

func (x *LegacySupportArchiveRequest) GetCollectVolumeInformation() bool {
	if x != nil {
		return x.CollectVolumeInformation
	}
	return false
}

func (x *LegacySupportArchiveRequest) GetExcludedEtcdKeys() []string {
	if x != nil {
		return x.ExcludedEtcdKeys
	}
	return nil
}

func (x *LegacySupportArchiveRequest) GetFailFast() bool {
	if x != nil {
		return x.FailFast
	}
	return false
}

func (x *LegacySupportArchiveRequest) GetCollectLogsFromTheseDogus() []string {
	if x != nil {
		return x.CollectLogsFromTheseDogus
	}
	return nil
}

func (x *LegacySupportArchiveRequest) GetCollectCesappLog() bool {
	if x != nil {
		return x.CollectCesappLog
	}
	return false
}

func (x *LegacySupportArchiveRequest) GetCollectCesappdLog() bool {
	if x != nil {
		return x.CollectCesappdLog
	}
	return false
}

func (x *LegacySupportArchiveRequest) GetCollectSyslog() bool {
	if x != nil {
		return x.CollectSyslog
	}
	return false
}

func (x *LegacySupportArchiveRequest) GetCollectAptLog() bool {
	if x != nil {
		return x.CollectAptLog
	}
	return false
}

func (x *LegacySupportArchiveRequest) GetCollectBackupWatcherLog() bool {
	if x != nil {
		return x.CollectBackupWatcherLog
	}
	return false
}

var File_support_archive_proto protoreflect.FileDescriptor

var file_support_archive_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x06, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x02, 0x18, 0x01, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x12, 0x42, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0xb5, 0x01, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4a, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4a, 0x0a, 0x11,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc6, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x00, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xe3,
	0x05, 0x0a, 0x1b, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x65, 0x74, 0x63, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x74, 0x63,
	0x64, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x73, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x1f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x64, 0x6f, 0x67, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x67, 0x75, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3e, 0x0a, 0x1b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3c, 0x0a, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x18, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x12, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x65, 0x74, 0x63, 0x64, 0x5f, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x64, 0x45, 0x74, 0x63, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x61, 0x69, 0x6c, 0x5f, 0x66, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x66, 0x61, 0x69, 0x6c, 0x46, 0x61, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x1d, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x68,
	0x65, 0x73, 0x65, 0x5f, 0x64, 0x6f, 0x67, 0x75, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x19, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d,
	0x54, 0x68, 0x65, 0x73, 0x65, 0x44, 0x6f, 0x67, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x65, 0x73, 0x61, 0x70, 0x70, 0x5f, 0x6c, 0x6f, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43,
	0x65, 0x73, 0x61, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x63, 0x65, 0x73, 0x61, 0x70, 0x70, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x65,
	0x73, 0x61, 0x70, 0x70, 0x64, 0x4c, 0x6f, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x12,
	0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x70, 0x74, 0x5f, 0x6c,
	0x6f, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x41, 0x70, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x3b, 0x0a, 0x1a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x32, 0x62, 0x0a, 0x0e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x50, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6f, 0x67, 0x75, 0x2f,
	0x63, 0x65, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_support_archive_proto_rawDescOnce sync.Once
	file_support_archive_proto_rawDescData = file_support_archive_proto_rawDesc
)

func file_support_archive_proto_rawDescGZIP() []byte {
	file_support_archive_proto_rawDescOnce.Do(func() {
		file_support_archive_proto_rawDescData = protoimpl.X.CompressGZIP(file_support_archive_proto_rawDescData)
	})
	return file_support_archive_proto_rawDescData
}

var file_support_archive_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_support_archive_proto_goTypes = []interface{}{
	(*CreateSupportArchiveRequest)(nil), // 0: maintenance.CreateSupportArchiveRequest
	(*CommonSupportArchiveRequest)(nil), // 1: maintenance.CommonSupportArchiveRequest
	(*ExcludedContents)(nil),            // 2: maintenance.ExcludedContents
	(*ContentTimeframe)(nil),            // 3: maintenance.ContentTimeframe
	(*LegacySupportArchiveRequest)(nil), // 4: maintenance.LegacySupportArchiveRequest
	(*timestamppb.Timestamp)(nil),       // 5: google.protobuf.Timestamp
	(*types.ChunkedDataResponse)(nil),   // 6: types.ChunkedDataResponse
}
var file_support_archive_proto_depIdxs = []int32{
	4, // 0: maintenance.CreateSupportArchiveRequest.legacy:type_name -> maintenance.LegacySupportArchiveRequest
	1, // 1: maintenance.CreateSupportArchiveRequest.common:type_name -> maintenance.CommonSupportArchiveRequest
	2, // 2: maintenance.CommonSupportArchiveRequest.excluded_contents:type_name -> maintenance.ExcludedContents
	3, // 3: maintenance.CommonSupportArchiveRequest.content_timeframe:type_name -> maintenance.ContentTimeframe
	5, // 4: maintenance.ContentTimeframe.start_date_time:type_name -> google.protobuf.Timestamp
	5, // 5: maintenance.ContentTimeframe.end_date_time:type_name -> google.protobuf.Timestamp
	0, // 6: maintenance.SupportArchive.Create:input_type -> maintenance.CreateSupportArchiveRequest
	6, // 7: maintenance.SupportArchive.Create:output_type -> types.ChunkedDataResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_support_archive_proto_init() }
func file_support_archive_proto_init() {
	if File_support_archive_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_support_archive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSupportArchiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_archive_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonSupportArchiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_archive_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExcludedContents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_archive_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentTimeframe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_support_archive_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacySupportArchiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_support_archive_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CreateSupportArchiveRequest_Legacy)(nil),
		(*CreateSupportArchiveRequest_Common)(nil),
	}
	file_support_archive_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_support_archive_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_support_archive_proto_goTypes,
		DependencyIndexes: file_support_archive_proto_depIdxs,
		MessageInfos:      file_support_archive_proto_msgTypes,
	}.Build()
	File_support_archive_proto = out.File
	file_support_archive_proto_rawDesc = nil
	file_support_archive_proto_goTypes = nil
	file_support_archive_proto_depIdxs = nil
}
